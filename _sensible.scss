// Sensible v0.5.1
// A Mobile-First Responsive Design SCSS framework
// Nathan Crank
// http://github.com/nathancrank/sensible




//////////////////////////////////////////////////////
// Constants
//////////////////////////////////////////////////////
// you can override all constants by changing them here, or better yet,
// by overriding them your code base after importing Sensible

// IE selector
$sens-oldie-selector: ".oldie";
$sens-oldie-default: false;

// experimental
// $sens-oldie-bp defines the media query at which all styles applied to higher media queries also apply to oldie.
// Examples:
//   $sens-oldie-bp is set at 60em
//   @include minq(32em) {} styles would be applied to oldie, but minq(77em) would not
//   @include maxq(32em) {} styles would not be applied to oldie, but maxq(77em) would be
$sens-oldie-bp: 60em;



//////////////////////////////////////////////////////
// Responsive Design Basics
//////////////////////////////////////////////////////

// sens-border-box changes an elements box model to border-box
@mixin sens-border-box {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}

// sens-viewport sets the new viewport property properly for responsive designs in IE10
// and other browsers current/future implementations of css based viewports
@mixin sens-viewport {
  @-webkit-viewport { width: device-width }
     @-moz-viewport { width: device-width }
      @-ms-viewport { width: device-width }
       @-o-viewport { width: device-width }
          @viewport { width: device-width }
}


// One to setup everything for most projects
@mixin sens-prep {
  * {
    @include sens-border-box;
  }
  @include sens-viewport;
}




//////////////////////////////////////////////////////
// Media Queries
//////////////////////////////////////////////////////

// Sizes
///////

@mixin minq($size, $oldie: $sens-oldie-default) {
  @media (min-width: $size) {
    @content
  }
  @if ($oldie or $size lt $sens-oldie-bp) {
    #{$sens-oldie-selector} & {
      @content
    }
  }
}

@mixin maxq($size, $oldie: $sens-oldie-default) {
  @media (max-width: $size) {
    @content
  }
  @if ($oldie or $size lt $sens-oldie-bp) {
    #{$sens-oldie-selector} & {
      @content
    }
  }
}




// Density
//////////

@mixin mres($density) {
  @media (-webkit-min-device-pixel-ratio: $density),
         (min-resolution: $density + "dppx") {
    @content
  }
}




//////////////////////////////////////////////////////
// Responsive Images
//////////////////////////////////////////////////////

@mixin sens-bg-image($img: "default", $ext: "png", $svg: false, $hires: "@2x"){
  background-image: image-url($img + "." + $ext);
  @include mres(1.1) {
    background-image: image-url($img + $hires + "." + $ext);
  };
  @if ($svg) {
    .svg & {
      background-image: image-url($img + ".svg")
    }
  }
}