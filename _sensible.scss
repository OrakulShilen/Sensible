// Sensible v0.1
// A Mobile-First Responsive Design SCSS framework
// Nathan Crank

// Requires SASS
// Compass + Sassy Math required for sens-variable-sizing




//////////////////////////////////////////////////////
// Box Model
//////////////////////////////////////////////////////

// sens-box-sizing automatically changes all elements to calculator their box model using border-box
@mixin sens-box-sizing {
  * {
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
    }
}




//////////////////////////////////////////////////////
// Queries
//////////////////////////////////////////////////////

@mixin sens-screen {
  @media screen {
    @content
  }
}

@mixin sens-print {
  @media print {
    @content
  }
}

@mixin sens-min($min) {
  @media (min-width: $min) {
    @content
  }
}

@mixin sens-orient($orientation) {
  @media (orientation: $orientation) {
    @content
  }
}

@mixin sens-min-density($density) {
  @media (-webkit-min-device-pixel-ratio: $density), (min-resolution: $density + "dppx") {
    @content
  }
}

@mixin sens-portrait {
  @media (orientation: portait) {
    @content
  }
}

@mixin sens-landscape {
  @media (orientation: portait) {
    @content
  }
}

// please don't use this particular one, its just here for emergencies!
@mixin sens-mobile-only($break: 47em) {
  @media (max-width: $break) {
    @content
  }
}

@mixin sens-tablet($break: 47em) {
  @media (min-width: $break) {
    @content
  }
}

@mixin sens-tablet-portrait($break: 47em) {
  @media (min-width: $break) and (orientation: portrait) {
    @content
  }
}

@mixin sens-tablet-landscape($break: 47em) {
  @media (min-width: $break) and (orientation: landscape) {
    @content
  }
}

@mixin sens-tablet-wide($break: 57em) {
  @media (min-width: $break) {
    @content
  }
}

@mixin sens-notebook($break: 67em) {
  @media (min-width: $break) {
    @content
  }
}

@mixin sens-desktop($break: 77em) {
  @media (min-width: $break) {
    @content
  }
}

@mixin sens-desktop-large($break: 87em) {
  @media (min-width: $break) {
    @content
  }
}

@mixin sens-desktop-xlarge($break: 97em) {
  @media (min-width: $break) {
    @content
  }
}

@mixin sens-desktop-xxlarge($break: 107em) {
  @media (min-width: $break) {
    @content
  }
}

@mixin sens-desktop-xxxlarge($break: 127em) {
  @media (min-width: $break) {
    @content
  }
}

@mixin sens-desktop-mammoth($break: 147em) {
  @media (min-width: $break) {
    @content
  }
}




//////////////////////////////////////////////////////
// images
//////////////////////////////////////////////////////

// sens-background-image takes a filename and uses the correct resolution version of it for a css background-image
// the base (1x) file should not have any extra ending on its name
// files should end in the following pattern: _1.5x, _2x, _3x, etc... (where "_" is the delimiter)
// $img takes the images path and name up until the file extention (not including the ".")
// $ext takes the images extention type, (default: png)
// $state is used to declare img states (active, hover, etc...)
// $inc takes a numeric value to increment the dppx at (default: 1)
// $max takes a numeric value at which to stop (default: 2)
// $min takes a numeric value at which to start (default: 1)
// $delim takes the delimiter style used (default "_")

@mixin sens-background-image($img: "default", $state: "", $inc: 1, $ext: "png", $max: 2, $min: 1, $delim: "_"){
  $i: $min;
  @if $state != "" {
    $state: $delim + $state;
  }
  @while $i <= $max {
    @if $i == 1 {
      background-image: url($img + $state + "." + $ext);
    } @else {
      @include sens-min-density($i) {
        background-image: url($img + $state + $delim + $i + "x" + "." + $ext);
      };
    }
    $i: $i + $inc;
  }
}




//////////////////////////////////////////////////////
// Experimental
//////////////////////////////////////////////////////

// sens-variable-sizing automatically increases the base font-size in ems as the viewport widens.
@mixin sens-variable-sizing($min: 57, $max: 157, $base: 1.2, $inc: 1) {
  $i: $min;
  @for $i from $min through $max {
    @include sens-min(#{$i}em) {
      font-size: #{exponent($i,1,3)/3}em;
    }
    $i: $i + $inc;
  }
}